{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFechGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAiBhD,OACE,sBAAMC,SAVa,SAAEC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAKlB,SACI,uBACEO,KAAK,OACLC,MAAQT,EACRU,SAlBkB,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCRhBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfC,EAFe,iDAEkCC,UAAWH,GAF7C,+DAGFI,MAAMF,GAHJ,cAGfG,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATjB,kBAadM,GAbc,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAEpC,OACE,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCHOO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDd,SAAEA,GAAe,IAAD,EACfd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAH8B,mBAClCC,EADkC,KAC3BC,EAD2B,KAsBzC,OAhBAC,qBAAU,WAERxB,EAASC,GACNwB,MAAK,SAAAC,GAEFH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAIhB,CAACpB,IAKGqB,EDnB6BK,CAAa1B,GAAjCa,EAFuB,EAE7BN,KAAca,EAFe,EAEfA,QAEtB,OACE,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEb,qBAAKA,UAAU,YAAf,SAEUH,EAAOJ,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAESA,GADCA,EAAIC,aEd7B,SAASgB,IAAgB,IAAD,EAEOzC,mBAAS,CAAC,cAFjB,mBAEtB0C,EAFsB,KAEV3C,EAFU,KAI7B,OACE,qCACE,8CACA,cAAC,EAAD,CACE2C,WAAaA,EACb3C,cAAgBA,IAElB,uBAEA,6BAEI2C,EAAWnB,KAAK,SAACT,GAAD,OACf,cAAC,EAAD,CAEGA,SAAUA,GADLA,WChBnB6B,IAASC,OACL,cAACH,EAAD,IACFI,SAASC,eAAe,W","file":"static/js/main.1a045313.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = ( e ) => {\r\n      setInputValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = ( e ) => {\r\n      e.preventDefault();\r\n\r\n      if( inputValue.trim().length > 2 ) {\r\n        setCategories( cats => [ inputValue, ...cats ] );\r\n        setInputValue('');\r\n      }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n        <input\r\n          type=\"text\"\r\n          value={ inputValue }\r\n          onChange={ handleInputChange } \r\n        />\r\n    </form>\r\n  );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async( category ) => {\r\n\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=0SoCisRxzV5KjRChJbJtKrSMatahHQh7`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n  const gifs = data.map(img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  })\r\n\r\n  return gifs;\r\n  \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url } ) => {\r\n\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={ url } alt={ title }/>\r\n      <p> { title } </p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useFechGifs } from '../hooks/useFetchGif';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFechGifs( category );\r\n\r\n    return (\r\n      <>\r\n          <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n          { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n\r\n          <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                      <GifGridItem\r\n                          key={ img.id }\r\n                          { ...img }\r\n                      />\r\n                    ))\r\n                }\r\n                \r\n          </div>\r\n      </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFechGifs = ( category ) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n\r\n    getGifs( category )\r\n      .then(imgs => {\r\n\r\n          setstate({\r\n            data: imgs,\r\n            loading: false\r\n          });     \r\n      })\r\n\r\n  }, [category]);\r\n\r\n\r\n\r\n\r\n  return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport function GifExpertApp() {\r\n\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory\r\n        categories={ categories }\r\n        setCategories={ setCategories }\r\n      />\r\n      <hr/>\r\n      \r\n      <ol>\r\n        {\r\n          categories.map( (category) => (\r\n           <GifGrid \r\n              key={category}\r\n              category={category} \r\n            />\r\n          ))\r\n        }\r\n      </ol>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}